{
	// Place your 全局 snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	//	DBl vscode 代码片段
	// 最后修改时间：2020-6-16 10:44:02
	"dvaReducer": {
		"prefix": "dvar",
		"body": [
			"${1:saveReducer}(state, { payload }){",
			"\treturn {",
			"\t\t...state,",
			"\t\t$2: payload",
			"\t}",
			"}"
		]
	},
	"dvaEffect": {
		"prefix": "dvaf",
		"body": [
			"*${1:getEffect}({ payload }, { call, put }){",
			"\t$2",
			"}"
		]
	},
	"dvaModelPut": {
		"prefix": "dvayieldput",
		"body": [
			"yield put ({",
			"\ttype: '$1',",
			"\tpayload: ${2:data}",
			"});"
		]
	},
	"dispatch": {
		"prefix": "dbldispatch",
		"body": [
			"dispatch({",
			"\ttype: '$1',",
			"\tpayload: $2",
			"});"
		]
	},
	"eggrestfull": {
		"prefix": "asyncResfullIndex",
		"body": [
			"async index() {",
			"\tconst ctx = this.ctx;",
			"\tctx.body = {",
			"\t",
			"\t};",
			"\tctx.status = 200;",
			"}",
			"async show() {",
			"\tconst ctx = this.ctx;",
			"\tctx.body = {",
			"\t",
			"\t};",
			"\tctx.status = 200;",
			"}",
			"async create() {",
			"\tconst ctx = this.ctx;",
			"\tctx.body = {",
			"\t",
			"\t};",
			"\tctx.status = 201;",
			"}",
			"async update() {",
			"\tconst ctx = this.ctx;",
			"\tctx.body = {",
			"\t",
			"\t};",
			"\tctx.status = 201;",
			"}",
			"async destroy() {",
			"\tconst ctx = this.ctx;",
			"\tctx.body = {",
			"\t",
			"\t};",
			"\tctx.status = 202;",
			"}",
		]
	},
	"eggtrycatch": {
		"prefix": "try{throw",
		"body": [
			"try {",
			"\t",
			"\t",
			"\t",
			"} catch (e) {",
			"\tthrow new Error(e);",
			"}"
		]
	},
	"eggtrycatchtransaction": {
		"prefix": "try{transaction",
		"body": [
			"let transaction: any;",
			"try {",
			"\t// 建立事务对象",
			"\ttransaction = await ctx.model.transaction();",
			"\t",
			"\t// todo ",
			"\t",
			"\t// 提交事务",
			"\tawait transaction.commit();",
			"\t",
			"\treturn {",
			"\t\tcode: 200,",
			"\t\tmsg: '添加成功'",
			"\t};",
			"\t",
			"} catch (e) {",
			"\t// 事务回滚",
			"\tawait transaction.rollback();",
			"\tthrow new Error(e);",
			"}"
		]
	},
	"eggreturnsuccess": {
		"prefix": "returneggok",
		"body": [
			"return {",
			"\tcode: 200,",
			"\tmsg: '添加成功'",
			"\tdata: $1",
			"};"
		]
	},
	"eggreturnerror": {
		"prefix": "returneggeroor",
		"body": [
			"return {",
			"\tcode: 400,",
			"\tmsg: '$1失败'",
			"};"
		]
	},
	"eggasyncindex": {
		"prefix": "asyncControllerIndex",
		"body": [
			"async $1() {",
			"\tconst { ctx, service } = this;",
			"\tconst req_data = ctx.request.body;",
			"\tconst res = await service.v1.admin.$2({",
			"\t\t...req_data",
			"\t})",
			"\tctx.body = res;",
			"\tctx.status = 200;",
			"}"
		]
	}
}